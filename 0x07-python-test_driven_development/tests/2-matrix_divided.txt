Using ''matrix_divided''
-------------------
This is an example text file . First import
''matrix_divided'' from the ''2-matrix_divided'' module:
        >>> matrix_divided = __import__('2-matrix_divided').matrix_divided  
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
	>>> matrix_divided([[1, 2, 3], [4, 5]], 3)
	Traceback (most recent call last):
                File "<stdin>", line 1, in <module>
                File "<stdin>", line 24, in matrix_divided
        TypeError: Each row of the matrix must have the same size
        >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
        Traceback (most recent call last):
                File "<stdin>", line 1, in <module>
                File "<stdin>", line 28, in matrix_divided
        ZeroDivisionError: division by zero
        >>> matrix_divided([[1, 2, 3], [4, "s", 6]], 2)
        Traceback (most recent call last):
                File "<stdin>", line 1, in <module>
                File "<stdin>", line 34, in matrix_divided
	TypeError: matrix must be a matrix (list of lists) of integers/floats
        >>> matrix_divided([[1, 2, 3], [4, 5, 6]], "s")
        Traceback (most recent call last):
                File "<stdin>", line 1, in <module>
                File "<stdin>", line 34, in matrix_divided
	TypeError: div must be a number 
        >>> matrix_divided([[1, 2, 3], [4, 5, 6]], float('inf'))
	[[0, 0, 0], [0, 0, 0]]
	>>> matrix_divided("c")
	TypeError: matrix_divided() missing 1 required positional argument: 'div'
	>>> matrix_divided()
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
